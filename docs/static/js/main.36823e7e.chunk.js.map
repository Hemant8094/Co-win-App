{"version":3,"sources":["Dropdown.js","Centervac.js","App.js","reportWebVitals.js","index.js"],"names":["Dropdown","props","className","name","defaultValue","onChange","e","target","value","disabled","placeholder","stateArray","map","state","id","Centervac","centerArray","center","style","fontSize","vaccine","available_capacity","min_age_limit","address","marginTop","slots","x","Math","random","App","useState","datas","setData","citys","setCity","centers","setCenters","centerid","setCentersid","selectedDate","setDate","useEffect","fetch","then","res","json","data","states","state_name","state_id","getCenters","date","_centers","sessions","catch","console","log","districts","district_name","district_id","type","Date","dateFormat","getDate","getMonth","getFullYear","onClick","onclick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36823e7e.chunk.js","sourcesContent":["// whoever what to use this library, please send data as name, id\r\nfunction Dropdown(props){\r\n    const dropMenu = ()=>{\r\n      return  props.stateArray.map((state)=>{\r\n            return <option key ={state.id} value={state.id} >{state.name}</option>\r\n                \r\n        })\r\n    }\r\n    return(\r\n        <>\r\n        <select className = \"menu\"name=\"state\" defaultValue=\"\"  onChange={(e)=> props.onChange(e.target.value)}>\r\n        <option value=\"\" disabled >{props.placeholder}</option>\r\n             { dropMenu()\r\n              }\r\n        </select>\r\n        </>\r\n    )\r\n}\r\nexport default Dropdown","function Centervac(props){\r\n   const centers = ()=>{\r\n     return   props.centerArray.map((center)=>{\r\n            return <div className=\"card\" key = {Math.random()}>\r\n                <div>\r\n                    <span style={{fontSize: 'x-large'}}>{center.name}</span>\r\n                    <span className=\"vaccine-name\">{center.vaccine}</span>\r\n                </div>\r\n                <div className=\"section\">vaccine available for {center.available_capacity} people above {center.min_age_limit} age</div>\r\n                <div className =\"address\">In The {center.address}</div>\r\n                <div style={{marginTop:'32px'}}>{center?.slots?.map(x => <span key = {Math.random()} className=\"slot\">{x}</span>)}</div>\r\n            </div>\r\n        })\r\n   }\r\n\r\n    return(\r\n        <div>\r\n            {centers()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Centervac","import {useState,useEffect} from \"react\"\nimport './App.css';\nimport Dropdown from \"./Dropdown\"\nimport  Centervac from \"./Centervac\"\nimport { distance, getLocation } from \"./latRequest\";\n\n\nfunction App() {\n\n  const [datas,setData] = useState([])\n  const [citys,setCity] = useState([])\n  const [centers,setCenters] = useState([])\n  const [centerid,setCentersid] = useState(0)\n  const [selectedDate, setDate] = useState('');\n  useEffect(()=>{\n    fetch(\"https://cdn-api.co-vin.in/api/v2/admin/location/states\")\n      .then(res => res.json())\n      .then(data => setData(data.states.map(x =>({name: x.state_name, id: x.state_id}))))\n  }, [])\n  \n  \n\n  const getDistrict =(id)=>{\n   return fetch(\"https://cdn-api.co-vin.in/api/v2/admin/location/districts/\"+id)\n    .then(res => res.json())\n    .then(citys => {\n      return(\n        setCity(citys.districts.map(x =>({name: x.district_name, id: x.district_id})))\n      )\n      \n    })\n  }\n  const getCenters =(id,date) =>{\n    // console.log(id + \" asdfgh \"+date)\n    // fetch(\"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=523&date=05-05-2021\")\n    fetch(\"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=\"+id+\"&date=\"+date)\n    .then(res => res.json())\n    .then(_centers => {\n      setCenters(_centers.sessions)\n      // return getLocation()\n      // .then(loc => {\n      //   if (loc) {\n      //     _centers.sessions.forEach(x => {\n      //       x.distance = distance(loc.coords.latitude, loc.coords.longitude, x.lat, x.long);\n      //     })\n      //     _centers.sessions.sort((a,b) => a.distance - b.distance);\n  \n      //     setCenters(_centers.sessions);\n      //   }\n      // })\n    })\n    .catch((e)=> {\n      console.log(e)\n      \n    })\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>\n          Co-win Resources\n        </h1>\n      </header>\n      {/* <input  placeholder = \"DD-MM-YYYY\" type=\"date\" onChange={(e)=> {\n            console.log(e.target.value);\n            // setValue(e.target.value)\n            }}/> */}\n      <div>\n        <Dropdown stateArray = {datas} \n                  onChange = {getDistrict}\n                  placeholder = \"State\"/>\n        <Dropdown stateArray = {citys} \n              onChange = {(id) => setCentersid(id)}\n              placeholder = \"District\"/> \n        \n        <input  className=\"menu\" type=\"date\" onChange={(e)=> {\n          const date = new Date(e.target.value);\n          const dateFormat = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`\n          setDate(dateFormat);\n        }}/>\n        <button className =\"menu\"onClick={() => getCenters(centerid, selectedDate)} >Go</button>    \n      </div>\n      <div>\n        <Centervac onclick ={getCenters} id = {centerid} centerArray ={centers}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}