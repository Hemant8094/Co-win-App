{"version":3,"sources":["Dropdown.js","loading.js","Centervac.js","Certificate.js","App.js","reportWebVitals.js","index.js"],"names":["Dropdown","props","className","name","defaultValue","onChange","e","target","value","style","width","disabled","placeholder","stateArray","map","state","id","loading","Centervac","centerArray","center","isArray","Array","sessions","item","fontSize","vaccine","available_capacity","min_age_limit","address","marginTop","x","Math","random","slots","Certificate","useState","setvalue","event","type","onClick","Download","App","datas","setData","citys","setCity","centers","setCenters","centerid","setCentersid","selectedDate","setDate","setLoading","centersByPin","setPin","centerPin","setCenterPin","useEffect","fetch","then","res","json","data","states","state_name","state_id","loadingfun","bool","paddingTop","position","districts","district_name","district_id","padding","marginLeft","date","Date","dateFormat","getDate","getMonth","getFullYear","length","pin","alert","_centers","catch","console","log","byPin","headers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ad0c7cb.chunk.js","sourcesContent":["// whoever what to use this library, please send data as name, id\r\nfunction Dropdown(props){\r\n    const dropMenu = ()=>{\r\n      return  props.stateArray.map((state)=>{\r\n            return <option key ={state.id} value={state.id} >{state.name}</option>\r\n                \r\n        })\r\n    }\r\n    return(\r\n        <>\r\n        <select className = \"menu\"name=\"state\" defaultValue=\"\"  onChange={(e)=> props.onChange(e.target.value)}\r\n        style = {{width:\"190px\"}}>\r\n        <option value=\"\" disabled >{props.placeholder}</option>\r\n             { dropMenu()\r\n              }\r\n        </select>\r\n        </>\r\n    )\r\n}\r\nexport default Dropdown","function loading () {\r\n    return <>\r\n    <div>\r\n        <div className = \"loading\">\r\n\r\n        </div>\r\n    </div>\r\n    </>\r\n}\r\nexport default loading","function Centervac(props){\r\n\r\n   const centers = ()=>{\r\n     return   props.centerArray.map((center)=>{\r\n            const isArray =Array.isArray(center.sessions);\r\n            const sessions = (item)=>{\r\n                return center.sessions[0][item]\r\n            }\r\n            return <div className=\"card\" key = {Math.random()}>\r\n                <div>\r\n                    <span style={{fontSize: 'x-large'}}>{center.name}</span>\r\n                     {isArray ?\r\n                         <span className=\"vaccine-name\">\r\n                         {sessions(\"vaccine\")}</span>\r\n                         :\r\n                         <span className=\"vaccine-name\">{center.vaccine}</span>} \r\n                </div>\r\n                {isArray?\r\n                <div className=\"section\">\r\n                    vaccine available for {sessions(\"available_capacity\")} people above {sessions(\"min_age_limit\")} age\r\n                    </div>:\r\n                    <div className=\"section\">\r\n                    vaccine available for {center.available_capacity} people above {center.min_age_limit} age\r\n                    </div>}\r\n                <div className =\"address\">In The {center.address}</div>\r\n                {isArray?<div style={{marginTop:'32px'}}>\r\n                    {sessions(\"slots\").map((x)=> <span key = {Math.random()} className=\"slot\">{x}</span>)\r\n                }\r\n                    </div>\r\n                    :<div style={{marginTop:'32px'}}>\r\n                        {center?.slots?.map(x => <span key = {Math.random()} className=\"slot\">{x}</span>)}\r\n                        </div>\r\n                        }\r\n            </div>\r\n        })\r\n   }\r\n\r\n    return(\r\n        <div>\r\n            {centers()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Centervac","import {useState} from \"react\"\r\nfunction Certificate(props){\r\nconst [value,setvalue] = useState(\"\")\r\n    \r\n\r\nreturn (\r\n    <div className = \"certificate\">\r\n        <div>\r\n       Get your certificate\r\n        </div>\r\n       <span >\r\n        Reference_id : \r\n       <input placeholder =\"Ex:1234567890\" \r\n              onChange = {\r\n                  (event)=>{\r\n                        setvalue(event.target.value)\r\n                  }} \r\n              type =\"number\"  /> \r\n       \r\n       </span>\r\n       <div>\r\n\r\n       <button onClick  = {()=>props.Download(value)}>Download</button>\r\n       </div>\r\n    </div>\r\n)\r\n}\r\nexport default Certificate","import {useState,useEffect} from \"react\"\r\nimport './App.css';\r\nimport Dropdown from \"./Dropdown\"\r\nimport Loading from \"./loading\"\r\nimport  Centervac from \"./Centervac\"\r\nimport  Certificate from \"./Certificate\"\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [datas,setData] = useState([])\r\n  const [citys,setCity] = useState([])\r\n  const [centers,setCenters] = useState([])\r\n  const [centerid,setCentersid] = useState(0)\r\n  const [selectedDate, setDate] = useState('');\r\n  const [loading,setLoading] = useState(false)\r\n  const [centersByPin,setPin] = useState([])\r\n  const [centerPin,setCenterPin] = useState(\"\")\r\n  useEffect(()=>{\r\n    fetch(\"https://cdn-api.co-vin.in/api/v2/admin/location/states\")\r\n      .then(res => res.json())\r\n      .then(data => setData(data.states.map(x =>({name: x.state_name, id: x.state_id}))))\r\n  }, [])\r\n  \r\n  \r\n\r\n  const getDistrict =(id)=>{\r\n   return fetch(\"https://cdn-api.co-vin.in/api/v2/admin/location/districts/\"+id)\r\n    .then(res => res.json())\r\n    .then(citys => {\r\n      return(\r\n        setCity(citys.districts.map(x =>({name: x.district_name, id: x.district_id})))\r\n      )\r\n      \r\n    })\r\n  }\r\n  const getCenters =(id,date,pin) =>{\r\n    if(date===\"\"){\r\n      alert(\"please select date\")\r\n    }else if(id !== 0 && pin===\"\"){\r\n\r\n      fetch(\"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=\"+id+\"&date=\"+date)\r\n      .then(res => res.json())\r\n      .then(_centers => {\r\n        if(_centers.sessions.length){\r\n          setCenters(_centers.sessions)\r\n          setLoading(false)\r\n        }else{\r\n          alert(\"No centers available here\")\r\n          setLoading(false)\r\n  \r\n        }\r\n      })\r\n      .catch((e)=> {\r\n        console.log(e)\r\n        \r\n      })\r\n    }\r\n    else{\r\n      \r\n      fetch(\"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=\"+pin+\"&date=\"+date)\r\n      .then(res=>res.json())\r\n      .then(byPin => {\r\n        console.log(byPin.centers)\r\n        if(byPin.centers.length){\r\n          setPin(byPin.centers)\r\n          setLoading(false)\r\n        }else{\r\n          alert(\"No centers available here\")\r\n          setLoading(false)\r\n  \r\n        }\r\n        \r\n      })\r\n    }\r\n  \r\n  }\r\n  const loadingfun = (bool)=>{\r\n  \r\n    setLoading(bool)\r\n  }\r\n  const dowloadPdf = (id)=>{\r\n      fetch(\"https://cdn-api.co-vin.in/api/v2/registration/certificate/public/download?beneficiary_reference_id=\"+id)\r\n      .then(res =>res.headers)\r\n      .then(data=>{\r\n          if(data===null) alert(\"not\")\r\n      })\r\n      \r\n  }\r\n  const renderCenters =()=>{\r\n    if(loading){\r\n      return <Loading/>\r\n    }else if(centerPin === \"\" && !loading ){\r\n      return <Centervac centerArray ={centers}/>\r\n    }else {\r\n      return  <Centervac centerArray ={centersByPin}/>\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>\r\n          Co-win Resources\r\n        </h1>\r\n      </header>\r\n\r\n      <div style  ={{paddingTop:\"15px\", position:\"relative\", width:\"100% \"}}>\r\n        <Dropdown stateArray = {datas} \r\n                  onChange = {getDistrict}\r\n                  placeholder = \"States\"/>\r\n        <Dropdown stateArray = {citys} \r\n              onChange = {(id) => setCentersid(id)}\r\n              placeholder = \"District\"/> \r\n        <button className = \"loginButton\">Sign in yourself</button>       \r\n      </div>\r\n      <div style = {{padding:\"10px\"}}>OR</div>\r\n      <input \r\n        type = \"number\" \r\n        className = \"pinInput\" \r\n        placeholder = \"Postal Code\"\r\n        onChange = {(e)=>{\r\n            setCenterPin(e.target.value)\r\n        }}/>\r\n        <div style = {{marginLeft:\"15px\"}}>\r\n          <input  className=\"menu\" type=\"date\" onChange={(e)=> {\r\n            const date = new Date(e.target.value);\r\n            const dateFormat = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`\r\n            setDate(dateFormat);\r\n          }}/>\r\n        { \r\n        \r\n        citys.length || centerPin ? <button className =\"menu\"onClick={() => {\r\n        getCenters(centerid, selectedDate,centerPin)\r\n        \r\n        selectedDate!==\"\" ? loadingfun(true):loadingfun(false)\r\n        }\r\n      } >Go</button>  : <button className =\"menu\" \r\n      \r\n      >Go</button>  \r\n      \r\n          }\r\n        </div>\r\n      <div>\r\n        \r\n        {renderCenters()}\r\n        \r\n      </div>\r\n      <Certificate Download = {dowloadPdf}/>  \r\n    </div>\r\n    \r\n      \r\n    \r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}